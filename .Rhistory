setwd("~/GitHub/meritocracy-preferences")
# Chunk 2
knitr::opts_chunk$set(warning = FALSE,message = FALSE, cache = TRUE,results = "hold")
knitr::opts_knit$set(root.dir = "../")
options(scipen=999)
rm(list=ls())
options(knitr.kable.NA = '')
# Chunk 3
library(sjPlot)
library(sjmisc) # several functions,ej read_stata
library(descr)
library(memisc)  # codebook
library(psych) # cor2latex
library(corrplot) # graph correlations
library(lavaan)
library(stargazer)
library(semTools)
library(plyr) # count
library(dplyr)
#library(car) # recode
library(ggplot2)
#library(Hmisc)
library(tidyverse)
library(data.table)
library(stringr)
library(countrycode)
library(lme4)
library(texreg)
library(mice)
library(ggrepel) # for scatter labels in sjp.scatter
#library(semPlot)
library(haven)
library(sjlabelled)
library(kableExtra)
library(summarytools)
library(tidyselect)
library(magrittr)
library(semPlot)
#library(Hmisc)
library(knitr)
# Chunk 4
load(file = "input/data/original/issp.rda")
#load(url('https://raw.githubusercontent.com/franciscomeneses/bases/master/issp.rda'))
# Check data
#names(issp2009)
### change variable names to lowercase
names(issp2009) <- tolower(names(issp2009))
### Check & generate IDs (v4: respondent, v5: country)
### Generate new sequential id individuals by country to merge
issp2009$id <- sequence(tabulate(issp2009$v5))
issp2009$idtem=issp2009$v5*10000
issp2009$id=issp2009$idtem + issp2009$id
# Chunk 5
# select
redistrib=issp2009[,c("v5","v33","v34","v36","v38","v39","id")]
# new names(issp2009)
redistrib$income_dif = redistrib$v33
redistrib$unemployed = redistrib$v34
redistrib$taxes     = redistrib$v36
redistrib$health    = redistrib$v38
redistrib$educ      = redistrib$v39
#Delete old variables
redistrib = redistrib[-c(2:6)]
stargazer(redistrib[-c(1,2)], type="html")
# Chunk 6
redistrib[3:7][redistrib[3:7] > 5] <- NA
stargazer(redistrib[-c(1,2)], type="html")
# Chunk 7
dim(redistrib)
# Chunk 8
get_labels(redistrib$income_dif)
redistrib[,3:7] <-sjlabelled::set_na(redistrib[,c("income_dif","unemployed", "taxes", "health", "educ")], na = c(8,9))
# Chunk 9
redistrib[3:7]=6-redistrib[3:7]
# Chunk 10
cfa_red1 <- '
# latent variables
redist =~ income_dif + unemployed + taxes
accum  =~ health + educ
'
# Chunk 11
# generate 5 multiple complete datasets
out <- mice(redistrib[3:7], m = 5)
D1 <- complete(out, 1)
D2 <- complete(out, 2)
D3 <- complete(out, 3)
D4 <- complete(out, 4)
D5 <- complete(out, 5)
# fit model for each complete dataset
fit1 <- cfa(cfa_red1, data = D1)
fit2 <- cfa(cfa_red1, data = D2)
fit3 <- cfa(cfa_red1, data = D3)
fit4 <- cfa(cfa_red1, data = D4)
fit5 <- cfa(cfa_red1, data = D5)
# predict scores for all models
p1 <- predict(fit1)
p2 <- predict(fit2)
p3 <- predict(fit3)
p4 <- predict(fit4)
p5 <- predict(fit5)
# compute 'average' across 5 sets of scores:
scores <- (p1 + p2 + p3 + p4 + p5) / 5
#Generate factor scores
scores_dat = as.data.frame(scores)
# Adaptar base para agregar factor scores (sacar todos NA)
redistrib_m = redistrib[rowSums(is.na(redistrib[3:7])) != 5, ]
# Merge with factor scores
redistrib_sco = cbind(redistrib, scores)
# Check
stargazer(redistrib_sco[, 8:9], type = "text")
# Save  factor scores
save(redistrib_sco, file = "input/data/proc/redistrib_sco.rda")
# Chunk 12
print(dfSummary(redistrib_sco, valid.col = FALSE, graph.magnif = 1),
max.tbl.height = 300, method = "render")
setwd("~/GitHub/meritocracy-preferences")
indepvar= issp2009 %>% dplyr::select(contains("_inc"), "sex","age","degree", "hompop", "v44", "v45", "movstatus"="v46", "v5","id")
sex_plotbefore <- sjPlot::plot_frq(indepvar$sex, title ="Gender before")
indepvar$sex=ifelse(indepvar$sex==1,0,ifelse(indepvar$sex==2,1,NA))
sex_plotafter <- sjPlot::plot_frq(indepvar$sex, title ="gender after")
plot_grid(list(sex_plotbefore, sex_plotafter) ,
margin = c(0.5,0.5,0.5,0.5), tags = c(" ", " "," ", " "), ncol=2)
plot_grid(sex_plotbefore, sex_plotafter, ncol=2)
plot_grid(sex_plotbefore, sex_plotafter, ncol = 2)
plot_grid(sex_plotbefore, sex_plotafter)
<-cowplot::plot_grid(sex_plotbefore, sex_plotafter, ncol=2)
cowplot::plot_grid(sex_plotbefore, sex_plotafter, ncol=2)
sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F)
sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T)
#which(indepvar$age > 85) # / 461 casos !
#which(indepvar$age < 15) # / 0 casos !
indepvar$age[indepvar$age > 85] = NA
# Categorical age
indepvar$age_c=indepvar$age
indepvar$age_c[indepvar$age_c <= 25] = 1
indepvar$age_c[indepvar$age_c > 25 & indepvar$age_c <=35] = 2
indepvar$age_c[indepvar$age_c > 35 & indepvar$age_c <=45] = 3
indepvar$age_c[indepvar$age_c > 45 & indepvar$age_c <=55] = 4
indepvar$age_c[indepvar$age_c > 55 & indepvar$age_c <=65] = 5
indepvar$age_c[indepvar$age_c > 65] = 6
sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T)
cowplot::plot_grid(ageafter, agebefore, ncol=2)
agebefore<-sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F)
ageafter <- sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T)
cowplot::plot_grid(ageafter, agebefore, ncol=2)
cowplot::plot_grid(agebefore, ageafter, ncol=2)
cowplot::plot_grid(agebefore, ageafter)
ageafter <- sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T, xlabel = C("18-25", "35-45", "45-55", "55,65", "65-85","NA(>85)"))
cowplot::plot_grid(agebefore, ageafter, ncol=2)
ageafter <- sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T, wrap.labels =  = C("18-25", "35-45", "45-55", "55,65", "65-85","NA(>85)"))
ageafter <- sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T, wrap.labels =   C("18-25", "35-45", "45-55", "55,65", "65-85","NA(>85)"))
ageafter <- sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T, wrap.labels =   c("18-25", "35-45", "45-55", "55,65", "65-85","NA(>85)"))
cowplot::plot_grid(agebefore, ageafter, ncol=2)
ageafter <- sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T, axis.labels =   c("18-25", "35-45", "45-55", "55,65", "65-85","NA(>85)"))
cowplot::plot_grid(agebefore, ageafter, ncol=2)
cowplot::plot_grid(degrebefore, degreafter, ncol=2)
degrebefore <-sjPlot::plot_frq(indepvar$degree, coord.flip = TRUE, title = "Degree before")
# Recode. Values over 5 are removed
indepvar$degree[indepvar$degree > 5]=NA
#### Dummy university
# Dummy university
indepvar$univ=indepvar$degree
indepvar$univ=ifelse(indepvar$univ<=4,0,
ifelse(indepvar$univ==5,1,NA))
degreafter<- sjPlot::plot_frq(indepvar$univ, coord.flip = TRUE, title = "Dummy university")
cowplot::plot_grid(degrebefore, degreafter, ncol=2)
sex_plotafter <- sjPlot::plot_frq(indepvar$sex, title ="Gender after",axis.labels = NULL)
sex_plotafter
sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F)
sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, show.labels = F)
sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = F)
agebefore<-sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = "")
sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = "")
sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL)
agebefore<-sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL) + xlab(" ")
agebefore
# Age
agebefore<-sjPlot::plot_hist(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL) + xlab(" ")
agebefore<-hist(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL) + xlab(" ")
agebefore<-mi::hist(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL)
agebefore
### Recode Age
# Age
agebefore<-hist(indepvar$age, title = "Age before", color = "blue")
### Recode Age
# Age
agebefore<-hist(indepvar$age, title = "Age before", color = blue)
### Recode Age
# Age
agebefore<-hist(indepvar$age, title = "Age before", color = red)
### Recode Age
# Age
agebefore<-hist(indepvar$age)
cowplot::plot_grid(agebefore, ageafter, ncol=2)
sex_plotbefore <- sjPlot::plot_frq(indepvar$sex, title ="Gender before")
indepvar$sex=ifelse(indepvar$sex==1,0,ifelse(indepvar$sex==2,1,NA))
sex_plotafter <- sjPlot::plot_frq(indepvar$sex, title ="Gender after")
cowplot::plot_grid(sex_plotbefore, sex_plotafter, ncol=2)
### Recode Age
# Age
agebefore<-hist(indepvar$age)
#which(indepvar$age > 85) # / 461 casos !
#which(indepvar$age < 15) # / 0 casos !
indepvar$age[indepvar$age > 85] = NA
# Categorical age
indepvar$age_c=indepvar$age
indepvar$age_c[indepvar$age_c <= 25] = 1
indepvar$age_c[indepvar$age_c > 25 & indepvar$age_c <=35] = 2
indepvar$age_c[indepvar$age_c > 35 & indepvar$age_c <=45] = 3
indepvar$age_c[indepvar$age_c > 45 & indepvar$age_c <=55] = 4
indepvar$age_c[indepvar$age_c > 55 & indepvar$age_c <=65] = 5
indepvar$age_c[indepvar$age_c > 65] = 6
ageafter <- sjPlot::plot_frq(indepvar$age_c, title = "Age after", show.na = T, axis.labels =   c("18-25","25 -35", "35-45", "45-55", "55,65", "65-85","NA(>85)"))
cowplot::plot_grid(agebefore, ageafter, ncol=2)
### Recode Age
# Age
agebefore<-sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL, values = NULL)
agebefore<-sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL, values = NULL)
agebefore<-sjPlot::plot_frq(indepvar$age, title = "Age before",show.mean = T , show.values = F,show.n = F, axis.labels = NULL)
cowplot::plot_grid(agebefore, ageafter, ncol=2)
sjPlot::plot_frq(indepvar$movstatus, coord.flip = TRUE, title = "Quintiles de ingreso")
indepvar$movstatus[indepvar$movstatus>=8]= NA
indepvar$movstatus <- car::recode(indepvar$movstatus,recodes ="c(1,2)=2;3=1;c(4,5)=3;c(6,7)=4")
indepvar$movstatus <- set_labels(indepvar$movstatus,labels = c("Sin movilidad"=1,
"Mov. Ascendente"=2,
"Mov. Descendente"=3,
"Indeterminado"=4))
knitr::kable(table(indepvar$movstatus), "html")
sjPlot::plot_frq(indepvar$movstatus, coord.flip = TRUE, title = "Quintiles de ingreso")
knitr::kable(table(indepvar$movstatus), "html")
knitr::kable(table(indepvar$movstatus), "text")
knitr::kable(table(indepvar$movstatus))
sjPlot::plot_frq(indepvar$movstatus, coord.flip = TRUE, title = "Quintiles de ingreso", labels = c("Sin movilidad"=1,
"Mov. Ascendente"=2,
"Mov. Descendente"=3,
"Indeterminado"=4))
sjPlot::plot_frq(indepvar$movstatus, coord.flip = TRUE, title = "Quintiles de ingreso", labels = c("Sin movilidad"=1,
"Mov. Ascendente"=2,
"Mov. Descendente"=3,
"Indeterminado"=4)
sjPlot::plot_frq(indepvar$movstatus, coord.flip = TRUE, title = "Quintiles de ingreso") + xlab = c("Sin movilidad"=1,"Mov. Ascendente"=2, "Mov. Descendente"=3,"Indeterminado"=4)
sjPlot::plot_frq(indepvar$movstatus, coord.flip = TRUE, title = "Quintiles de ingreso") + ylab = c("Sin movilidad"=1,"Mov. Ascendente"=2, "Mov. Descendente"=3,"Indeterminado"=4)
indepvar$movstatus <- set_labels(indepvar$movstatus,levels = c("Sin movilidad"=1,
"Mov. Ascendente"=2,
"Mov. Descendente"=3,
"Indeterminado"=4))
indepvar$movstatus <- set_labels(indepvar$movstatus,labels =  = c("Sin movilidad"=1,
"Mov. Ascendente"=2,
"Mov. Descendente"=3,
"Indeterminado"=4))
indepvar$movstatus <- set_labels(indepvar$movstatus,labels = c("Sin movilidad"=1,
"Mov. Ascendente"=2,
"Mov. Descendente"=3,
"Indeterminado"=4))
library(sjPlot)
library(sjmisc) # several functions,ej read_stata
library(descr)
library(memisc)  # codebook
library(psych) # cor2latex
library(corrplot) # graph correlations
library(lavaan)
library(stargazer)
library(semTools)
library(plyr) # count
library(dplyr)
#library(car) # recode
library(ggplot2)
#library(Hmisc)
library(tidyverse)
library(data.table)
library(stringr)
library(countrycode)
library(lme4)
library(texreg)
library(mice)
library(ggrepel) # for scatter labels in sjp.scatter
#library(semPlot)
library(haven)
library(sjlabelled)
library(kableExtra)
library(summarytools)
library(tidyselect)
library(magrittr)
library(semPlot)
#library(Hmisc)
library(knitr)
indepvar$movstatus <- set_labels(indepvar$movstatus,labels = c("Sin movilidad"=1,
"Mov. Ascendente"=2,
"Mov. Descendente"=3,
"Indeterminado"=4))
knitr::kable(table(indepvar$movstatus), "html")
knitr::kable(table(indepvar$movstatus))
knitr::kable(table(indepvar$movstatus))
knitr::kable(table(indepvar$movstatus))
sjPlot::plot_frq(indepvar$movstatus, coord.flip = TRUE, title = "Quintiles de ingreso")
source('~/GitHub/meritocracy-preferences/render-site.R', echo=TRUE)
source('~/GitHub/meritocracy-preferences/render-site.R', echo=TRUE)
source('~/GitHub/meritocracy-preferences/render-site.R', echo=TRUE)
