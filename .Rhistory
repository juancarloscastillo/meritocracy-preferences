fit_mer_redis_cyprus <- cfa(cfa_perpref2,data=merit_redist_cyprus,missing = "ML" , estimator="MLR")
merit_redist_chequia <-  merit_redist %>% filter(v5==203)
fit_mer_redis_chequia <- cfa(cfa_perpref2,data=merit_redist_chequia,missing = "ML" , estimator="MLR")
merit_redist_denmark <-  merit_redist %>% filter(v5==208)
fit_mer_redis_denmark <- cfa(cfa_perpref2,data=merit_redist_denmark,missing = "ML" , estimator="MLR")
merit_redist_est <-  merit_redist %>% filter(v5==233)
fit_mer_redis_est <- cfa(cfa_perpref2,data=merit_redist_est,missing = "ML" , estimator="MLR")
merit_redist_finlandia <-  merit_redist %>% filter(v5==246)
fit_mer_redis_finlandia <- cfa(cfa_perpref2,data=merit_redist_finlandia,missing = "ML" , estimator="MLR")
merit_redist_francia <-  merit_redist %>% filter(v5==250)
fit_mer_redis_francia <- cfa(cfa_perpref2,data=merit_redist_francia,missing = "ML" , estimator="MLR")
merit_redist_deutschland <-  merit_redist %>% filter(v5==276)
fit_mer_redis_deutschland <- cfa(cfa_perpref2,data=merit_redist_deutschland,missing = "ML" , estimator="MLR")
merit_redist_hunria <-  merit_redist %>% filter(v5==348)
fit_mer_redis_hunria <- cfa(cfa_perpref2,data=merit_redist_hunria,missing = "ML" , estimator="MLR")
merit_redist_islandia <-  merit_redist %>% filter(v5==352)
fit_mer_redis_islandia <- cfa(cfa_perpref2,data=merit_redist_islandia,missing = "ML" , estimator="MLR")
merit_redist_israel <-  merit_redist %>% filter(v5==376)
fit_mer_redis_israel <- cfa(cfa_perpref2,data=merit_redist_israel,missing = "ML" , estimator="MLR")
merit_redist_italia <-  merit_redist %>% filter(v5==380)
fit_mer_redis_italia <- cfa(cfa_perpref2,data=merit_redist_italia,missing = "ML" , estimator="MLR")
merit_redist_japon <-  merit_redist %>% filter(v5==392)
fit_mer_redis_japon <- cfa(cfa_perpref2,data=merit_redist_japon,missing = "ML" , estimator="MLR")
merit_redist_letonia <-  merit_redist %>% filter(v5==428)
fit_mer_redis_letonia <- cfa(cfa_perpref2,data=merit_redist_letonia,missing = "ML" , estimator="MLR")
merit_redist_lituania <-  merit_redist %>% filter(v5==440)
fit_mer_redis_lituania <- cfa(cfa_perpref2,data=merit_redist_lituania,missing = "ML" , estimator="MLR")
merit_redist_nuevazelanda <-  merit_redist %>% filter(v5==554)
fit_mer_redis_nuevazelanda <- cfa(cfa_perpref2,data=merit_redist_nuevazelanda,missing = "ML" , estimator="MLR")
merit_redist_noruega <-  merit_redist %>% filter(v5==578)
fit_mer_redis_noruega <- cfa(cfa_perpref2,data=merit_redist_noruega,missing = "ML" , estimator="MLR")
merit_redist_filipinas <-  merit_redist %>% filter(v5==608)
fit_mer_redis_filipinas <- cfa(cfa_perpref2,data=merit_redist_filipinas,missing = "ML" , estimator="MLR")
merit_redist_polonia <-  merit_redist %>% filter(v5==616)
fit_mer_redis_polonia <- cfa(cfa_perpref2,data=merit_redist_polonia,missing = "ML" , estimator="MLR")
merit_redist_rusia <-  merit_redist %>% filter(v5==643)
fit_mer_redis_rusia <- cfa(cfa_perpref2,data=merit_redist_rusia,missing = "ML" , estimator="MLR")
merit_redist_eslovaquia <-  merit_redist %>% filter(v5==703)
fit_mer_redis_eslovaquia <- cfa(cfa_perpref2,data=merit_redist_eslovaquia,missing = "ML" , estimator="MLR")
merit_redist_eslovenia <-  merit_redist %>% filter(v5==705)
fit_mer_redis_eslovenia <- cfa(cfa_perpref2,data=merit_redist_eslovenia,missing = "ML" , estimator="MLR")
merit_redist_sudafrica <-  merit_redist %>% filter(v5==710)
fit_mer_redis_sudafrica <- cfa(cfa_perpref2,data=merit_redist_sudafrica,missing = "ML" , estimator="MLR")
merit_redist_sudafrica <-  merit_redist %>% filter(v5==710)
fit_mer_redis_sudafrica <- cfa(cfa_perpref2,data=merit_redist_sudafrica,missing = "ML" , estimator="MLR")
merit_redist_espana <-  merit_redist %>% filter(v5==724)
fit_mer_redis_espana <- cfa(cfa_perpref2,data=merit_redist_espana,missing = "ML" , estimator="MLR")
merit_redist_suecia <-  merit_redist %>% filter(v5==752)
fit_mer_redis_suecia <- cfa(cfa_perpref2,data=merit_redist_suecia,missing = "ML" , estimator="MLR")
merit_redist_suiza <-  merit_redist %>% filter(v5==756)
fit_mer_redis_suiza <- cfa(cfa_perpref2,data=merit_redist_suiza,missing = "ML" , estimator="MLR")
merit_redist_turquia<-  merit_redist %>% filter(v5==792)
fit_mer_redis_turquia <- cfa(cfa_perpref2,data=merit_redist_turquia,missing = "ML" , estimator="MLR")
merit_redist_ucrania<-  merit_redist %>% filter(v5==804)
fit_mer_redis_ucrania <- cfa(cfa_perpref2,data=merit_redist_ucrania,missing = "ML" , estimator="MLR")
merit_redist_reinounido<-  merit_redist %>% filter(v5==826)
fit_mer_redis_reinounido <- cfa(cfa_perpref2,data=merit_redist_reinounido,missing = "ML" , estimator="MLR")
merit_redist_estadosunidos<-  merit_redist %>% filter(v5==840)
fit_mer_redis_estadosunidos <- cfa(cfa_perpref2,data=merit_redist_estadosunidos,missing = "ML" , estimator="MLR")
merit_redist_venezuela<-  merit_redist %>% filter(v5==862)
fit_mer_redis_venezuela <- cfa(cfa_perpref2,data=merit_redist_venezuela,missing = "ML" , estimator="MLR")
# Chunk 21
sum_fit<- bind_rows(fitmeasures(fit_mer_redis_arg)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_australia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_austria)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_belgium)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_bulgaria)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_chile)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_china)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_taiwan)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
#                   fitmeasures(fit_mer_redis_croatia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
#                   fitmeasures(fit_mer_redis_cyprus)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_chequia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_denmark)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_est)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_finlandia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_francia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_deutschland)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_venezuela)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_islandia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_israel)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
#                   fitmeasures(fit_mer_redis_italia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_japon)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
#                   fitmeasures(fit_mer_redis_letonia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_lituania)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_nuevazelanda)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_noruega)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_filipinas)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_polonia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_rusia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_eslovaquia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_eslovenia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_sudafrica)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_espana)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_suecia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_suiza)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_turquia)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_ucrania)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_reinounido)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")],
fitmeasures(fit_mer_redis_estadosunidos)[c("chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")])
# Chunk 22
sum_fit$mod <- c("Argentina","Australia","Austria", "Belguim","Bulgaria","Chile","China","Taiwan", "Chequia","Dinamarca","EST","Finlandia","Francia","Deutschland", "Venezuela#", "Islandia", "Israel", "Japon","Lituania","Nueva Zelanda", "Noruega", "Filipinas", "Polonia", "Rusia","Eslovequia","Eslovenia","Sudafrica", "España","Suecia","Suiza","Truquia","Ucrania","Reino Unido", "Estados Unidos.")
colnames <- c("Model","$\\chi2$","df","CFI","RMSEA","RMSEA CI lower", "RMSEA CI upper")
sum_fit <- sum_fit %>% dplyr::select("mod","chisq","df","cfi.robust","rmsea.robust","rmsea.ci.lower.robust","rmsea.ci.upper.robust")
sumtable01<- kable(sum_fit,digits = 3,format = "html",row.names = F,booktabs=T, caption = "Summary fit country",col.names = colnames,escape = FALSE) %>%
kable_styling(full_width = F)  %>%
collapse_rows(columns = 1,valign = "middle");sumtable01
# Chunk 23
# CFA with secon order unmerit
cfa_mer_red2 <- '
# latent variables
merit =~ hwork + ambition
parent=~ wealthy + pareduc
backg=~ race + gender
network=~ people + polcone
bmerit =~ welljob + hardjob
need=~ family + child
redist =~ income_dif + unemployed + taxes
accum  =~ health + educ
unmerit =~ parent + backg + network
'
fit_mer_red2 <- cfa(cfa_mer_red2,data=merit_redist, missing = "ML")
#	 summary(fit_mer_red1, fit.measures=TRUE,standardized=TRUE)
fit_mer_red2c <- cfa(cfa_mer_red2,data=merit_redist,ordered = names(merit_redist[3:10,19:29]))
#	summary(fit_mer_redc, fit.measures=TRUE,standardized=TRUE)
sum_fit<- bind_rows(fitmeasures(fit_mer_red2)[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper")],
fitmeasures(fit_mer_red2c)[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper")])
sum_fit$mod <- c("Model 1","Model 2")
sum_fit$est <- c("MLR","DWLS")
sum_fit <- sum_fit %>% dplyr::select("mod","est","chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper")
colnames <- c("Model","Estimator","$\\chi2$","df","CFI","RMSEA","RMSEA CI lower", "RMSEA CI upper")
sumtable01<- kable(sum_fit,digits = 3,format = "html",row.names = F,booktabs=T, caption = "Redistribution and Meritocratic measurement Summary fit",col.names = colnames,escape = FALSE) %>%
kable_styling(full_width = F)  %>%
collapse_rows(columns = 1,valign = "middle")  %>%
footnote(number = c("Model 1: Continue item",
"Model 2: Ordered item"));sumtable01
semPlot::semPaths(fit_mer_red2,layout = "circle", rotation = 3,
intercepts = FALSE, style = "lisrel", curvePivot = TRUE,
sizeMan = 4, sizeLat = 6)
# Chunk 24
sum_fit$mod <- c("Model 1","Model 2")
sum_fit$est <- c("MLR","DWLS")
sum_fit <- sum_fit %>% dplyr::select("mod","est","chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper")
colnames <- c("Model","Estimator","$\\chi2$","df","CFI","RMSEA","RMSEA CI lower", "RMSEA CI upper")
sumtable01<- kable(sum_fit,digits = 3,format = "html",row.names = F,booktabs=T, caption = "Redistribution and Meritocratic measurement Summary fit",col.names = colnames,escape = FALSE) %>%
kable_styling(full_width = F)  %>%
collapse_rows(columns = 1,valign = "middle")  %>%
footnote(number = c("Model 1: Continue item",
"Model 2: Ordered item"));sumtable01
# Chunk 25
semPlot::semPaths(fit_mer_red2,layout = "circle", rotation = 3,
intercepts = FALSE, style = "lisrel", curvePivot = TRUE,
sizeMan = 4, sizeLat = 6)
# Chunk 26
# Factor scores
fscores <- as.data.frame(lavPredict(fit_mer_red2))
# Correlations
cormat=cor(fscores[c(7,8,1,9,5,6)],use="pairwise.complete.obs")
#save
png("output/results/corplot_totscores.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(cormat) <-c(
"A. Redistribution Preferences",
"B. Acummulation Preferences",
"C. Meritocratic Perception",
"D. Non-Meritocratic Perception",
"E. Meritocratic Preferences",
"F. Non-Meritocratic Preferences")
colnames(cormat) <-c("(A)", "(B)","(C)","(D)","(E)","(F)")
corrplot(
cormat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
dev.off()
# Chunk 27
#Se agrega la base de datos dejando paises como
mer_pref_agg = aggregate(mer_pref,
by = list(mer_pref$v5c),
FUN = mean,
na.rm = TRUE)
names(mer_pref_agg)[names(mer_pref_agg) == "Group.1"] = "v5c"
load("input/data/proc/meritocracy.rda")
# Adjust data
merit_agg=aggregate(meritocracy, by=list(meritocracy$v5c),FUN=mean, na.rm=TRUE)
names(merit_agg)[names(merit_agg)=="Group.1"]="v5c"
#   names(merit_agg)
#  dim(merit_agg)
load("input/data/proc/mer_pref_polycor.rda")
corMat <- cor(mer_pref_polycor, use="pairwise.complete.obs")
png("output/results/macrocor.png",width=600,height=600)
windowsFonts(A = windowsFont("Times New Roman"))
rownames(corMat) <-c(
"A. Redistribution Preferences",
"B. Acummulation Preferences",
"C. Meritocratic Perception",
"D. Non-Meritocratic Perception",
"E. Meritocratic Preferences",
"F. Non-Meritocratic Preferences",
"H. Gini market index",
"I. Gini disp index",
"J. FI index")
colnames(corMat) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(H)","(I)","(J)")
corrplot(
corMat,
method = "color",
type = "upper",
tl.col = "black",
addCoef.col = "black",
diag = TRUE,
family = "A",
number.font = 6,
tl.cex =0.75,
number.cex = 1)
dev.off()
# Chunk 28
plotredistgini <- plot_scatter(mer_pref_agg, gini_neto, redist,
title = "Redistribution and inequality",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE) + theme_classic()  + ylab("Redistribution preferences") + xlab("Gini index")
mer_pref_agg_zaf <- mer_pref_agg[which(mer_pref_agg$v5c != 'ZAF'),]
plotredistgini_outliers <- plot_scatter(mer_pref_agg_zaf, gini_neto, redist,
title = "Redistribution and inequality (without outliers)",
fit.line = lm,
show.ci = TRUE) + theme_classic() + ylab("Redistribution preferences") + xlab("Gini index")
plotredistfi <- plot_scatter(mer_pref_agg,  fi_index, redist,
title = "Redistribution and Economic freedom index",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE) + theme_classic() + ylab("Redistribution preferences") + xlab("Economic freedom index")
mer_pref_agg_ven <- mer_pref_agg[which(mer_pref_agg$v5c != 'VEN'),]
plotredistfi_outliers<-plot_scatter(mer_pref_agg_ven,  fi_index, redist,
title = "Redistribution and Economic freedom index (sin outliers)",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE) + theme_classic() + ylab("Redistribution preferences") + xlab("Economic freedom index")
ggsave(plot = plot_grid(list(plotredistgini, plotredistgini_outliers, plotredistfi, plotredistfi_outliers),
margin = c(0.3,0.3,0.3,0.3),
tags = c(" ", " ", " ", " ", " ", " ")),
filename = "output/results/plot_redistmacro.png", width = 10, height = 10, dpi= "retina")
plotredistmerit <- plot_scatter(mer_pref_agg,  merit, redist,
title = "Redistribution and Meritocratic perception",
#	dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Meritocratic perception") +
plotredistbmerit <-plot_scatter(mer_pref_agg,  bmerit, redist,
title = "Redistribution and Meritocratic preferences",
#	dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Meritocratic preferences")
plotredistunmerit <-plot_scatter(mer_pref_agg,  unmerit, redist,
title = "Redistribution and Unmeritocratic perception",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Unmeritocratic perception")
plotredistneed <-plot_scatter(mer_pref_agg,  need, redist,
title = "Preferenciasno meritocraticas ",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Unmeritocratic preferences")
ggsave(plot = plot_grid(list(plotredistmerit, plotredistbmerit, plotredistunmerit, plotredistneed),
margin = c(0.3,0.3,0.3,0.3),
tags = c(" ", " ", " ", " ", " ", " ")),
filename = "output/results/plot_redistmerit.png", width = 10, height = 10, dpi= "retina")
plotredistmerit <- plot_scatter(mer_pref_agg,  merit, redist,
title = "Redistribution and Meritocratic perception",
#	dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Meritocratic perception") +
plotredistbmerit <-plot_scatter(mer_pref_agg,  bmerit, redist,
title = "Redistribution and Meritocratic preferences",
#	dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Meritocratic preferences")
plotredistmerit <- plot_scatter(mer_pref_agg,  merit, redist,
title = "Redistribution and Meritocratic perception",
#	dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Meritocratic perception")
plotredistbmerit <-plot_scatter(mer_pref_agg,  bmerit, redist,
title = "Redistribution and Meritocratic preferences",
#	dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Meritocratic preferences")
plotredistunmerit <-plot_scatter(mer_pref_agg,  unmerit, redist,
title = "Redistribution and Unmeritocratic perception",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Unmeritocratic perception")
plotredistneed <-plot_scatter(mer_pref_agg,  need, redist,
title = "Preferenciasno meritocraticas ",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Redistribution preferences") + xlab("Unmeritocratic preferences")
ggsave(plot = plot_grid(list(plotredistmerit, plotredistbmerit, plotredistunmerit, plotredistneed),
margin = c(0.3,0.3,0.3,0.3),
tags = c(" ", " ", " ", " ", " ", " ")),
filename = "output/results/plot_redistmerit.png", width = 10, height = 10, dpi= "retina")
source('C:/Users/Julio/Dropbox/papers/meritocracy-preferences/render-site.R')
# Save
ggsave(png,filename = "output/images/plotlikert_detearn.png",device = "png", width=15, height=5)
![](../output/images/plotlikert_detearn.png)
# short var labels
# cambiar orden para la leyenda
labels= c("Essential", "Very important", "Fairly important",
"Not very important", "Not important at all" )  ### E
png<-sjPlot::plot_likert((detearn[3:8]),
legend.labels = labels,
cat.neutral = 3,
geom.colors   = c("#9ecae1", "#6baed6","#4292c6", "#2171b5"), # colorbrewer2.org
sort.frq      = "neg.asc", # sort descending)
title         = "Pay preferences",
intercept.line.color = "white", # vertical middle
expand.grid   = F, # no inner margins in plot
show.n        = FALSE, # hide N's in axis labels
grid.range    = 1.8,
geom.size = 0.6) # expand axis 130% )
# Save
ggsave(png,filename = "output/images/plotlikert_detearn.png",device = "png", width=15, height=5)
png<-sjPlot::plot_likert((detearn[3:8]),
legend.labels = labels,
cat.neutral = 3,
geom.colors   = c("#9ecae1", "#6baed6","#4292c6", "#2171b5"), # colorbrewer2.org
sort.frq      = "neg.asc", # sort descending)
title         = "Pay preferences",
intercept.line.color = "white", # vertical middle
expand.grid   = F, # no inner margins in plot
show.n        = FALSE, # hide N's in axis labels
grid.range    = 1.8,
geom.size = 0.6) # expand axis 130% )
# Save
ggsave(png,filename = "output/images/plotlikert_detearn.png",device = "png", width=15, height=5)
source('C:/Users/Julio/Dropbox/papers/meritocracy-preferences/render-site.R')
source('C:/Users/Julio/Dropbox/papers/meritocracy-preferences/render-site.R')
semPlot::semPaths(fit_mer_red2,layout = "circle", rotation = 3,
intercepts = FALSE, style = "lisrel", curvePivot = TRUE,
sizeMan = 4, sizeLat = 6)
plotaccumgini<-plot_scatter(mer_pref_agg, gini_neto, accum,
title = "Accumulation and Inequality ",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + theme_classic() + ylab("Accumulation preferences") + xlab("Gini index")
rmarkdown::render_site("docs",quiet = F) # Render site
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
set_theme(base = theme_bw(),
theme.font = "serif",
axis.textsize.x = 1.2,
axis.textsize.y = 1.2,
geom.label.size = 4,
legend.just = 0.35,
legend.size = 1.2,
legend.backgroundcol = "white")
plotredistgini <- plot_scatter(mer_pref_agg, gini_neto, redist,
title = "Redistribution and Inequality",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE) + theme_classic()  + ylab("Redistributive preferences") + xlab("Gini index")
set_theme(base = theme_bw(),
theme.font = "serif",
axis.textsize.x = 1.2,
axis.textsize.y = 1.2,
geom.label.size = 4,
legend.just = 0.35,
legend.size = 1.2,
legend.backgroundcol = "white")
theme_set(theme(plot.caption = element_text(size = 15)))
theme_set(theme(plot.caption = element_text(size = 15)))
theme_set(theme(plot.caption = element_text(size = 15)))
theme_classic(plot.caption = element_text(size = 15)
theme_set(theme_classic(plot.caption = element_text(size = 15)))
theme_set(theme_classic(plot.caption = element_text(size = 15)))
theme_set(theme(plot.caption = element_text(size = 15)))
set_theme(base = theme_bw(),
theme.font = "serif",
axis.textsize.x = 1.2,
axis.textsize.y = 1.2,
geom.label.size = 4,
legend.just = 0.35,
legend.size = 1.2,
legend.backgroundcol = "white")
theme_set(theme(plot.caption = element_text(size = 15)))
plotredistgini <- plot_scatter(mer_pref_agg, gini_neto, redist,
title = "Redistribution and Inequality",
#dot.labels = merit_agg$v5c,
fit.line = "lm",
show.ci = TRUE) + theme_classic()  + ylab("Redistributive preferences") + xlab("Gini index")
rmarkdown::render_site("docs",quiet = F) # Render site
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
old <- theme_set(theme_bw())
theme_update(plot.caption = element_text(size = 12))
old <- theme_set(theme_bw())
theme_update(plot.caption = element_text(size = 12))
old <- theme_set(theme_bw())
old <- theme_set(theme_bw())
theme_update(plot.caption = element_text(size = 12))
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
set_theme(base = theme_classic(),
theme.font = "serif",
axis.textsize.x = 1.2,
axis.textsize.y = 1.2,
geom.label.size = 4,
legend.just = 0.35,
legend.size = 1.2,
legend.backgroundcol = "white")
old <- theme_set(theme_classic())
theme_update(plot.caption = element_text(size = 12))
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
rmarkdown::render_site("docs",quiet = F) # Render site
plotginineed <- plot_scatter(mer_pref_agg,gini_neto,  need,
title = "Unmeritocratic preferences and Inequality",
#dot.labels = mer_pref_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + ylab("Unmeritocratic preferences") + xlab("Gini index")
mer_pref_agg_zaf <- mer_pref_agg[which(mer_pref_agg$v5c!='ZAF'), ]
plotginineed_out<- plot_scatter(mer_pref_agg_zaf,gini_neto,  need,
title = "Unmeritocratic preferences and Inequality",
#	dot.labels = mer_pref_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + ylab("Unmeritocratic preferences") + xlab("Gini index") +labs(caption = "Excluding outliers")
plotfineed <- plot_scatter(mer_pref_agg,fi_index,  need,
title = "Unmeritocratic preferences and Economic freedom index ",
#dot.labels = mer_pref_agg$v5c,
fit.line = "lm",
show.ci = TRUE) + ylab("Unmeritocratic preferences") + xlab("Economic freedom index")
mer_pref_agg_ven <- mer_pref_agg[which(mer_pref_agg$v5c!='VEN'), ]
plotfineed_out <- plot_scatter(mer_pref_agg_ven,fi_index,  need,
title = "Unmeritocratic preferences and Economic freedom index",
#	dot.labels = mer_pref_agg_ven$v5c,
fit.line = "lm",
show.ci = TRUE) + ylab("Unmeritocratic preferences") + xlab("Economic freedom index") +labs(caption = "Excluding outliers")
|
ggsave(plot = plot_grid(list(plotginineed, plotginineed_out, plotfineed, plotfineed_out),
margin = c(0.3,0.3,0.3,0.3), tags = c(" ", " ", " ", " ", " ", " ")),
filename = "output/results/plot_needginifi.png", width = 10, height = 10, dpi= "retina")
# before you run this line, check if your R Markdown files have a .rmd or .Rmd extension
# on this case we use both
ext <- c(grep("^prod_.*\\.rmd$",  x = dir(path = "docs"),value = T), # for .rmd
grep("^prod_.*\\.Rmd$",  x = dir(path = "docs"),value = T), # for .Rmd
#         grep("_cache",x = dir(path = "docs"),value = T),            # for files within the "_cache" folder
#         grep("^prod_.*\\_cache$",  x = dir(path = "docs"),value = T), #
grep("^prod_.*\\.R$",    x = dir(path = "docs"),value = T), # for .R
".tex",".log",".RData",".Rhistory")                         # for .tex .log .RData .Rhistory
for (i in 1:length(ext)) {
file.remove(paste0("docs/",dir(path="docs", pattern=ext[i]))) # delete files from /docs folder4
unlink(paste0("docs/",(ext[i])),recursive = TRUE)             # Remove the cache files (first)
}
for (i in 1:length(ext)) {
unlink(paste0("docs/",(ext[i])),recursive = TRUE) # Remove the cache folders (second)
}
# [ALTERNATIVE:] delete files from /production folder (in case you previously rendered these files)
prod.files <- c(grep("^prod_.*\\_cache$",x = dir(path = "production"),value = T),
grep("^prod_.*\\_files$",x = dir(path = "production"),value = T),
grep("^prod_.*\\.html$" ,x = dir(path = "production"),value = T),
".RData",".Rhistory"
)
for (i in 1:length(prod.files)) {
file.remove(paste0("production/",dir(path="production", pattern=prod.files[i]))) # delete residual files /production folder
unlink(paste0("production/",(prod.files[i])),recursive = TRUE)                   # delete files within the "_cache" and "_files" folders
}
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
plotginineed <- plot_scatter(mer_pref_agg,gini_neto,  need,
title = "Unmeritocratic preferences and Inequality",
#dot.labels = mer_pref_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + ylab("Unmeritocratic preferences") + xlab("Gini index")
mer_pref_agg_zaf <- mer_pref_agg[which(mer_pref_agg$v5c!='ZAF'), ]
plotginineed_out<- plot_scatter(mer_pref_agg_zaf,gini_neto,  need,
title = "Unmeritocratic preferences and Inequality",
#	dot.labels = mer_pref_agg$v5c,
fit.line = "lm",
show.ci = TRUE)  + ylab("Unmeritocratic preferences") + xlab("Gini index") + labs(caption = "Excluding outliers")
plotfineed <- plot_scatter(mer_pref_agg,fi_index,  need,
title = "Unmeritocratic preferences and Economic freedom index ",
#dot.labels = mer_pref_agg$v5c,
fit.line = "lm",
show.ci = TRUE) + ylab("Unmeritocratic preferences") + xlab("Economic freedom index")
mer_pref_agg_ven <- mer_pref_agg[which(mer_pref_agg$v5c!='VEN'), ]
plotfineed_out <- plot_scatter(mer_pref_agg_ven,fi_index,  need,
title = "Unmeritocratic preferences and Economic freedom index",
#	dot.labels = mer_pref_agg_ven$v5c,
fit.line = "lm",
show.ci = TRUE) + ylab("Unmeritocratic preferences") + xlab("Economic freedom index") + labs(caption = "Excluding outliers")
|
ggsave(plot = plot_grid(list(plotginineed, plotginineed_out, plotfineed, plotfineed_out),
margin = c(0.3,0.3,0.3,0.3), tags = c(" ", " ", " ", " ", " ", " ")),
filename = "output/results/plot_needginifi.png", width = 10, height = 10, dpi= "retina")
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
production<- list.files(path = "production",pattern = "prod_")        # a list with the names of the files to copy
file.copy(file.path("production",production), "docs",overwrite = TRUE)# copy data proc and analysis files
rmarkdown::render_site("docs",quiet = F) # Render site
